#!/bin/bash

set -ex

httpscred=`cat /var/www/html/secret`

git clean -ffdx
make config
sed -i 's/ST_OS_PKG_TBOOT=.*/ST_OS_PKG_TBOOT=""/' .config
sed -i 's/ST_OS_PKG_ACM=.*/ST_OS_PKG_ACM=""/' .config
sed -i "s|ST_PROVISIONING_SERVER_URL=.*|ST_PROVISIONING_SERVER_URL=(\"https://${httpscred}@185.213.154.92/artifacts/os-latest.json\")|" .config
sed -i 's/ST_BOOT_MODE=local/ST_BOOT_MODE=network/' .config
sed -i 's/ST_LINUXBOOT_VARIANT=minimal/ST_LINUXBOOT_VARIANT=debug/' .config
make toolchain

# Fetch the signing keys
mkdir -p out/keys
cp -R /var/www/html/artifacts/signing_keys out/keys

make keygen-cpu

# TOOD Ugly workaround not to build the os
mkdir -p out/os-packages
touch out/os-packages/boot_order

make mbr-bootloader-installation

# Populate artifacts directory
cid=`git log -1 --abbrev=12 --pretty=format:"%h" 2>/dev/null`
ts=`date +%Y%m%d-%H%M%S`
dir=`mktemp -d /var/www/html/artifacts/img_stboot-mbr-network-debug_${ts}_XXX-g${cid}`

chmod 775 ${dir}

mv out/stboot-installation/mbr-bootloader/stboot_mbr_installation.img ${dir}

mkdir -p ${dir}/keys
mv out/keys/cpu_keys/cpu_rsa ${dir}/keys
mv out/keys/cpu_keys/cpu_rsa.pub ${dir}/keys
mv out/keys/cpu_keys/ssh_host_rsa_key.pub ${dir}/keys
chmod 644 ${dir}/keys/*

mkdir -p ${dir}/attic
cp -R out/* ${dir}/attic
cp .config ${dir}/attic/debug

find ${dir} -type d -exec chmod a+rx {} \;
find ${dir} -type f -exec chmod a+r {} \;

echo "Build done! Artifacts in $(basename ${dir})."
